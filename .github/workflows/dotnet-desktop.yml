name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Mt4LogParser.sln
      Test_Project_Path: ''
      Wap_Project_Directory: ''
      Wap_Project_Path: ''

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Find test project path
      run: |
        Test_Project_Path=$(find /path/to/your/repository -name '*.csproj' | grep '/Tests/')
        echo "Test project path: $Test_Project_Path"
      id: find_test_project_path

    - name: Find Wap project directory
      run: |
        Wap_Project_Directory=$(find /path/to/your/repository -type d -name 'Wap_Project_Directory_Name')
        echo "Wap project directory: $Wap_Project_Directory"
      id: find_wap_project_directory

    - name: Find Wap project path
      run: |
        Wap_Project_Path=$(find $Wap_Project_Directory -name '*.csproj')
        echo "Wap project path: $Wap_Project_Path"
      id: find_wap_project_path

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Restore the application
      run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path ${{ env.Wap_Project_Directory }} -ChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild ${{ env.Wap_Project_Path }} /p:Configuration=${{ matrix.configuration }} /p:UapAppxPackageBuildMode=StoreUpload /p:AppxBundle=Always /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

    - name: Remove the pfx
      run: Remove-Item -path ${{ env.Wap_Project_Directory }}/GitHubActionsWorkflow.pfx

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}/AppPackages
